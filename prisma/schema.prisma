generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Admin {
  id          String        @id @default(cuid())
  name        String        @unique
  route       String
  email       String        @unique
  password    String
  Reservation Reservation[]
  AdminConfig AdminConfig?
  Service     Service[]
  ClosedDays  ClosedDays[]
  Day         Day[]
}

model AdminConfig {
  id               String   @id @default(cuid())
  adminId          String   @unique
  requirePayment   Boolean  @default(true)
  paymentValue     Float    @default(10)
  description      String   @default("Reserve seu horário já!")
  openingHours     DateTime
  closingHours     DateTime
  interval         DateTime
  logoKey          String   @default("")
  logoUrl          String   @default("")
  phoneNumber      String   @default("")
  multipleServices Boolean  @default(false)
  admin            Admin    @relation(fields: [adminId], references: [id], onDelete: Cascade)

  @@index([adminId])
}

model ClosedDays {
  id         String   @id @default(cuid())
  adminId    String
  dateClosed DateTime
  admin      Admin    @relation(fields: [adminId], references: [id], onDelete: Cascade)

  @@index([adminId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Service {
  id           String        @id @default(cuid())
  adminId      String
  name         String
  imageUrl     String?
  imageKey     String?
  admin        Admin         @relation(fields: [adminId], references: [id], onDelete: Cascade)
  reservations Reservation[]

  @@unique([adminId, name])
  @@index([adminId])
}

model Reservation {
  id            String   @id @default(cuid())
  adminId       String
  paymentIdMP   String?  @unique
  name          String
  email         String
  phoneNumber   String
  justDate      DateTime
  dateTime      DateTime
  createdAt     DateTime @updatedAt
  serviceId     String?
  paymentStatus String?
  admin         Admin    @relation(fields: [adminId], references: [id], onDelete: Cascade)
  service       Service? @relation(fields: [serviceId], references: [id], onDelete: Cascade)

  @@unique([dateTime, serviceId])
  @@index([serviceId])
  @@index([adminId])
}

model Day {
  weekDay     Int
  adminId     String
  openingHour DateTime
  closingHour DateTime
  interval    DateTime
  open        Boolean  @default(false)
  admin       Admin    @relation(fields: [adminId], references: [id], onDelete: Cascade)

  @@unique([weekDay, adminId])
  @@index([adminId])
}
